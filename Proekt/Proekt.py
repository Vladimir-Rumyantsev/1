class Discipline:
    def __init__(self, name, semester, duration, total_hours, assessment, department):
        self.name = name
        self.semester = semester
        self.duration = duration
        self.total_hours = total_hours
        self.assessment = assessment
        self.department = department


def read_data_from_file():
    result = []
    with open(file, 'r') as f:
        arr = f.readlines()
        for i in arr:
            data = i.strip().split(', ')
            name = data[0][1:-1]
            semester = int(data[1])
            duration = int(data[2])
            total_hours = int(data[3])
            assessment = data[4][1:-1]
            department = data[5][1:-1]
            result.append(Discipline(name, semester, duration, total_hours, assessment, department))
    return result


def write_data_to_file(data):
    with open(file, 'w') as f:
        for discipline in data:
            line = (f'"{discipline.name}", {discipline.semester}, {discipline.duration}, {discipline.total_hours}, '
                    f'"{discipline.assessment}", "{discipline.department}"\n')
            f.write(line)


def binary_insertion_sort(arr, lam=lambda x: x):
    for i in range(1, len(arr)):
        key = arr[i]
        left, right = 0, i
        while left < right:
            mid = (left + right) // 2
            if lam(arr[mid]) < lam(key):
                left = mid + 1
            else:
                right = mid
        for j in range(i, left, -1):
            arr[j] = arr[j - 1]
        arr[left] = key
    return arr


def add_discipline(database):
    name = str(input('\n————————————————————————————————————————————————————————————————\n\n'
                     'Вы зашли в функцию создания новой дисциплины\n'
                     'Введите "Выход или "0", чтобы выйти\n'
                     'Либо введите название новой дисциплины\nВаш ввод: '))
    if (name == '0') or (name.lower() == 'выход'):
        print(f'Возвращаемся в главное меню\n\n————————————————————————————————————————————————————————————————\n')
        return
    try:
        semester = int(input(f'\nОтлично, создаём новую дисциплину "{name}"\n'
                             f'С какого семестра читается эта дисциплина? Введите натуральное число\nВаш ввод: '))
    except:
        print(f'Вы ввели не натуральное число, поэтому дисциплина "{name}" не добавлена!\nВозвращаемся в главное меню'
              f'\n\n————————————————————————————————————————————————————————————————\n')
        return
    try:
        duration = int(input(f'\nТеперь введите продолжительность курса в семестрах по дисциплине "{name}" '
                             f'(натуральное число)\nВаш ввод: '))
    except:
        print(f'Вы ввели не натуральное число, поэтому дисциплина "{name}" не добавлена!\nВозвращаемся в главное меню'
              f'\n\n————————————————————————————————————————————————————————————————\n')
        return
    try:
        hours = int(input(f'\nДальше введите информацию об общем количестве часов по дисциплине "{name}" '
                          f'(натуральное число)\nВаш ввод: '))
    except:
        print(f'Вы ввели не натуральное число, поэтому дисциплина "{name}" не добавлена!\nВозвращаемся в главное меню'
              f'\n\n————————————————————————————————————————————————————————————————\n')
        return
    assessment = str(input(f'\nВыбор вида отчётности по дисциплине "{name}" ("Зачёт" или "Экзамен")\n'
                           f'Введите "1" или "Зачёт", чтобы выбрать вид отчётности "Зачёт"\n'
                           f'Введите "2" или "Экзамен", чтобы выбрать вид отчётности "Экзамен"\nВаш ввод: '))
    if (assessment == '1') or (assessment.lower() == 'зачёт'):
        if file == 'data.txt':
            assessment = 'Credit'
        else:
            assessment = 'Зачёт'
    elif (assessment == '2') or (assessment.lower() == 'экзамен'):
        if file == 'data.txt':
            assessment = 'Exam'
        else:
            assessment = 'Экзамен'
    else:
        print(f'Вы ввели некорректную информацию, поэтому дисциплина "{name}" не добавлена!\nВозвращаемся в главное '
              f'меню\n\n————————————————————————————————————————————————————————————————\n')
        return
    department = str(input(f'\nИ последнее - какая кафедра читает курс по дисциплине "{name}"?\nВаш ввод: '))
    database.append(Discipline(name, semester, duration, hours, assessment, department))
    print(f'\nНовая дисциплина "{name}" успешно добавлена в базу данных!\n'
          f'Возвращаемся в главное меню\n\n————————————————————————————————————————————————————————————————\n')


def remove_discipline(database):
    ln = len(database)
    if ln == 0:
        print('\n————————————————————————————————————————————————————————————————\n\n'
              'Вы зашли в функцию удаления дисциплины, но на данный момент в базе данных нет ни одной дисциплины\n'
              'Возвращаемся в главное меню\n'
              '\n————————————————————————————————————————————————————————————————\n')
        return
    name = str(input('\n————————————————————————————————————————————————————————————————\n\n'
                     'Вы зашли в функцию удаления дисциплины\n'
                     'Введите название дисциплины, которую вы хотите удалить\nВаш ввод: '))
    chek = 0
    for i in range(ln):
        if name.lower() == str(database[i].name).lower():
            print(f'Дисциплина "{database[i].name}" успешно удалена из базы данных!')
            database.pop(i)
            chek += 1
            break
    if chek == 0:
        print('Данная дисциплина не была обнаружена в базе данных. Возможно вы ошиблись при вводе её названия')
    print('\nВозвращаемся в главное меню\n\n————————————————————————————————————————————————————————————————\n')


def edit_discipline(database):
    ln = len(database)
    if ln == 0:
        print('\n————————————————————————————————————————————————————————————————\n\n'
              'Вы зашли в функцию редактирования дисциплин, но на данный момент в базе данных нет ни одной дисциплины'
              '\nВозвращаемся в главное меню\n'
              '\n————————————————————————————————————————————————————————————————\n')
        return
    name = str(input('\n————————————————————————————————————————————————————————————————\n\n'
                     'Вы зашли в функцию редактирования дисциплин\n'
                     'Введите название дисциплины, которую вы хотите изменить\n'
                     'Либо введите всё что угодно, что не является дисциплиной, чтобы вернуться в главное меню'
                     '\nВаш ввод: '))
    for i in range(ln):
        if name.lower() == str(database[i].name).lower():
            print(f'\nВ базе данных обнаружена дисциплина "{database[i].name}"')
            while True:
                a = str(input(f'Воспользуйтесь меню ниже для корректировки дисциплины "{database[i].name}"\n'
                              f'Введите "1" для изменения названия дисциплины "{database[i].name}"\n'
                              f'Введите "2" для изменения семестра, с которого начинается чтение '
                              f'дисциплины "{database[i].name}"\n'
                              f'Введите "3" для изменения информации о продолжительности курса (в семестрах) '
                              f'по дисциплине "{database[i].name}"\n'
                              f'Введите "4" для изменения информации об общем количестве часов '
                              f'по дисциплине "{database[i].name}"\n'
                              f'Введите "5" для изменения информации о виде отчётности (зачёт, экзамен) '
                              f'по дисциплине "{database[i].name}"\n'
                              f'Введите "6" для изменения информации о кафедре, которая читает '
                              f'дисциплину "{database[i].name}"\n'
                              f'Введите всё что угодно, кроме чисел от 1 до 6, чтобы вернуться на главный экран\n'
                              f'Ваш ввод: '))
                if a == '1':
                    database[i].name = str(input(f'\nВведите новое название название для '
                                                 f'дисциплины "{database[i].name}": '))
                    print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                elif a == '2':
                    try:
                        semester = int(input(f'\nВведите новую информацию о том, к какого семестра читается '
                                             f'дисциплина "{database[i].name}" (Натуральное число):\nВаш ввод: '))
                        database[i].semester = semester
                        print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                    except:
                        print(f'Вы ввели не натуральное число, поэтому данные о дисциплине '
                              f'"{database[i].name}" не изменены!\n'
                              f'Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                elif a == '3':
                    try:
                        duration = int(input(f'\nВведите новую информацию о количестве семестров по дисциплине '
                                             f'"{database[i].name}" (Натуральное число):\nВаш ввод: '))
                        database[i].duration = duration
                        print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                    except:
                        print(f'Вы ввели не натуральное число, поэтому данные о дисциплине '
                              f'"{database[i].name}" не изменены!\n'
                              f'Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                elif a == '4':
                    try:
                        hours = int(input(f'\nВведите новую информацию об общем количестве часов по дисциплине '
                                          f'"{database[i].name}" (Натуральное число):\nВаш ввод: '))
                        database[i].total_hours = hours
                        print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                    except:
                        print(f'Вы ввели не натуральное число, поэтому данные о дисциплине '
                              f'"{database[i].name}" не изменены!\n'
                              f'Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                elif a == '5':
                    assessment = str(input(f'\nВведите новую информацию о виде отчётности по дисциплине '
                                           f'"{database[i].name}" ("Зачёт" или "Экзамен")\n'
                                           f'Введите "1" или "Зачёт", чтобы выбрать вид отчётности "Зачёт"\n'
                                           f'Введите "2" или "Экзамен", чтобы выбрать вид отчётности "Экзамен"\n'
                                           f'Ваш ввод: '))
                    if (assessment == '1') or (assessment.lower() == 'зачёт'):
                        if file == 'data.txt':
                            database[i].assessment = 'Credit'
                        else:
                            database[i].assessment = 'Зачёт'
                        print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                    elif (assessment == '2') or (assessment.lower() == 'экзамен'):
                        if file == 'data.txt':
                            database[i].assessment = 'Exam'
                        else:
                            database[i].assessment = 'Экзамен'
                        print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                    else:
                        print(f'Вы ввели некорректную информацию, поэтому данные о дисциплине '
                              f'"{database[i].name}" не изменены!\n'
                              f'Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                elif a == '6':
                    database[i].department = str(input(f'Введите новую информацию о кафедре, которая читает '
                                                       f'дисциплину "{database[i].name}"\nВаш ввод: '))
                    print(f'Готово! Возвращаемся в меню корректировки дисциплины "{database[i].name}"\n')
                else:
                    print(f'\nВозвращаемся в главное меню'
                          f'\n\n————————————————————————————————————————————————————————————————\n')
                    return

    print(f'Данная дисциплина не была обнаружена в базе данных\nВозвращаемся в главное меню'
          f'\n\n————————————————————————————————————————————————————————————————\n')


def display_database(database):
    ln = len(database)
    if ln == 0:
        print('\n————————————————————————————————————————————————————————————————\n\n'
              'Вы зашли в функцию показа всех дисциплин, имеющихся в базе данных, '
              'но в данный момент в базе данных нет ни одной дисциплины\nПеревожу вас в главное меню\n'
              '\n————————————————————————————————————————————————————————————————\n')
        return
    print('\n————————————————————————————————————————————————————————————————\n\n'
          'Вы зашли в функцию показа всех дисциплин, имеющихся в базе данных\n'
          f'На данный момент у нас их {ln}\nВот все из них:\n')
    while True:
        for i in range(ln):
            print(f'{i + 1}. {database[i].name}')
        a = str(input('\nЧтобы узнать больше о какой либо дисциплине - введите её номер или название'
                      '\nЧтобы выйти из функции - введите "0" или "Выход"\nВаш ввод: '))
        if (a == '0') or (a.lower() == 'выход'):
            print(f'\nВозвращаемся в главное меню\n'
                  f'\n————————————————————————————————————————————————————————————————\n')
            return
        chek = 0
        for i in range(ln):
            if (a.lower() == (str(database[i].name)).lower()) or (a == str(i + 1)):
                print(f'\nПодробная информания о дисциплине "{database[i].name}":\n'
                      f'Название дисциплины - {database[i].name}\n'
                      f'Читается с - {database[i].semester} семестра\n'
                      f'Продолжительность курса - {database[i].duration} семестр(а/ов)\n'
                      f'Общее количество часов - {database[i].total_hours}\n'
                      f'Вид отчётности - {database[i].assessment}\n'
                      f'Читающая курс кафедра - {database[i].department}\n')
                chek += 1
        if chek == 0:
            print(f'\nТакая дисциплина не найдена, возможно вы ошиблись в её названии')
        input('Введите всё что угодно, чтобы вернуться к списку всех дисциплин\nВаш ввод: ')
        print()


def sort(database):
    print('\n————————————————————————————————————————————————————————————————\n\nВы зашли в функцию "Учебный план"!')
    while True:
        try:
            srt = int(input('Выберите номер отчёта, который вы хотите создать:\n'
                            'Введите "1" для сортировки дисциплин по: семестру начала чтения (по возрастанию) + '
                            'читающей кафедре (по возрастанию) + общему количеству часов (по убыванию)\n'
                            'Введите "2" для сортировки дисциплин по: заданному виду отчётности + '
                            'продолжительности курса (по возрастанию) + общему количеству часов (по убыванию)\n'
                            'Введите "3" для сортировки дисциплин по: общему количеству часов в определённом диапозоне '
                            '+ читающей кафедре (по возрастанию) + общему количеству часов (по убыванию)\n'
                            'Любой другой ввод выведет вас в главное меню\nВаш ввод: '))
            if not (1 <= srt <= 3):
                print(f'\nВозвращаемся в главное меню\n'
                      f'\n————————————————————————————————————————————————————————————————\n')
                return
        except:
            print(f'\nВозвращаемся в главное меню\n'
                  f'\n————————————————————————————————————————————————————————————————\n')
            return

        if srt == 1:
            arr = binary_insertion_sort(binary_insertion_sort((binary_insertion_sort(database.copy(),
                                                                                     lambda x: -x.total_hours)),
                                                              lambda x: x.department), lambda x: x.semester)
            if len(arr) > 0:
                print(f'\nДисциплины, отсортированные по вашему запросу:')
            else:
                print('\nНа данный момент в базе нет ни одной дисциплины, удовлетворяющей вашим требованиям')
            for i in range(len(arr)):
                print(f'{i + 1}. {arr[i].name}')
            srt = str(input('\nВведите "0" или "Выход", чтобы вернуться в гланое меню'
                            '\nВведите всё что угодно другое, чтобы перейти к меню функции "Учебный план"'
                            '\nВаш ввод: '))
            if srt == '0' or srt.lower() == 'выход':
                print(f'\nВозвращаемся в главное меню\n'
                      f'\n————————————————————————————————————————————————————————————————\n')
                return
            print()

        elif srt == 2:
            srt = input('\nВыберите вид отчётности, по которому нужно выдать выборку дисциплин\n'
                        'Введите "1" или "Зачёт", чтобы выбрать вид отчётности "Зачёт"\n'
                        'Введите "2" или "Экзамен", чтобы выбрать вид отчётности "Экзамен"\n'
                        'Ваш ввод: ')
            arr = []
            if srt == '1' or srt.lower() == 'зачёт':
                for i in range(len(database)):
                    if ((str(database[i].assessment).lower() == 'зачёт') or
                            (str(database[i].assessment).lower() == 'credit')):
                        arr.append(database[i])
            elif srt == '2' or srt.lower() == 'экзамен':
                for i in range(len(database)):
                    if ((str(database[i].assessment).lower() == 'экзамен') or
                            (str(database[i].assessment).lower() == 'exam')):
                        arr.append(database[i])

            arr = binary_insertion_sort((binary_insertion_sort(arr, lambda x: -x.total_hours)), lambda x: x.duration)
            if len(arr) > 0:
                print(f'\nДисциплины, отсортированные по вашему запросу:')
            else:
                print('\nНа данный момент в базе нет ни одной дисциплины, удовлетворяющей вашим требованиям')
            for i in range(len(arr)):
                print(f'{i + 1}. {arr[i].name}')
            srt = str(input('\nВведите "0" или "Выход", чтобы вернуться в гланое меню'
                            '\nВведите всё что угодно другое, чтобы перейти к меню функции "Учебный план"'
                            '\nВаш ввод: '))
            if srt == '0' or srt.lower() == 'выход':
                print(f'\nВозвращаемся в главное меню\n'
                      f'\n————————————————————————————————————————————————————————————————\n')
                return
            print()
        elif srt == 3:
            try:
                n1, n2 = map(int, input('\nЧтобы подготовить выборку дисциплин, в которой общее количество часов '
                                        'чтения находится в заданном диапазоне, введите два числа через пробел: '
                                        'Минимальное и Максимальное количество часов чтения дисциплин\n'
                                        'Чтобы выйти в главное меню - введите что угодно другое\n'
                                        'Ваш ввод: ').split(" ", 1))
            except:
                print(f'\nВозвращаемся в главное меню\n'
                      f'\n————————————————————————————————————————————————————————————————\n')
                return

            arr = []
            for i in range(len(database)):
                if n1 <= int(database[i].total_hours) <= n2:
                    arr.append(database[i])

            arr = binary_insertion_sort((binary_insertion_sort(arr, lambda x: -x.total_hours)), lambda x: x.department)
            if len(arr) > 0:
                print(f'\nДисциплины, отсортированные по вашему запросу:')
            else:
                print('\nНа данный момент в базе нет ни одной дисциплины, удовлетворяющей вашим требованиям')
            for i in range(len(arr)):
                print(f'{i + 1}. {arr[i].name}')
            srt = str(input('\nВведите "0" или "Выход", чтобы вернуться в гланое меню'
                            '\nВведите всё что угодно другое, чтобы перейти к меню функции "Учебный план"'
                            '\nВаш ввод: '))
            if srt == '0' or srt.lower() == 'выход':
                print(f'\nВозвращаемся в главное меню\n'
                      f'\n————————————————————————————————————————————————————————————————\n')
                return
            print()


file = 'data.txt'
a = input('\nДобро пожаловать в программу для работы с базой данных по дисциплинам!\n'
          'Надеюсь, опыт пользования программой вам понравится!\n\n'
          'P.S. Программа плохо работает с данными на русском языке, поэтому сначала выберите базу данных\n'
          'Введите "1", чтобы использовать базу данных на русском языке (на свой страх и риск)\n'
          'Введите "2", чтобы продолжить использовать базу данных на английском языке\n'
          'Ваш ввод: ')
if a == '1':
    file = 'data_ru.txt'
error_ru = 0
error_en = 0
try:
    A = read_data_from_file()
except Exception as ex:
    if file == 'data_ru.txt':
        file = 'data.txt'
        A = read_data_from_file()
        print(f'\nВо время загрузки базы данных на русском произошла ошибка, поэтому была загружена база '
              f'данных на английском языке!\n\nТекст ошибки:\n{ex}\n\nПереходим в главное меню\n'
              f'\n————————————————————————————————————————————————————————————————\n')
        error_ru = 1
    else:
        print(f'\nВо время загрузки базы данных на английском произошла неожиданная ошибка\n'
              f'База данных не загружена или загружена неправильно! Советуем перезагрузить программу\n\n'
              f'Текст ошибки:\n{ex}\n\n'
              f'Переходим в главное меню\n\n————————————————————————————————————————————————————————————————\n')
        error_en = 1
if a == '1' and error_ru == 0:
    print('\nЗаписал, приступаем к работе с базой данных на русском и переходим в главное меню программы!\n'
          '\n————————————————————————————————————————————————————————————————\n')
elif error_ru == 1 or error_en == 1:
    pass
elif a == '2' and error_en == 0:
    print('\nОтлично, приступаем к работе с базой данных на английском и переходим в главное меню программы!\n'
          '\n————————————————————————————————————————————————————————————————\n')
elif error_en == 0:
    print('\nЯсно... Тогда я сделаю выбор за вас\nБудем работать с базой данных на английском\n'
          'Переходим в главное меню программы!\n'
          '\n————————————————————————————————————————————————————————————————\n')
while True:
    try:
        a = str(input('Главное меню\n\n'
                      'Выберите функцию для работы с базой данных (для этого введите число от 0 до 5)\n'
                      '1. Добавить дисциплину\n'
                      '2. Удалить дисциплину\n'
                      '3. Редактировать дисциплину\n'
                      '4. Показать список всех дисциплин\n'
                      '5. Учебный план (создать отчёт)\n'
                      '0. Выключить программу\n'
                      'Ваш ввод: '))
        if a == '1':
            add_discipline(A)
            write_data_to_file(A)
        elif a == '2':
            remove_discipline(A)
            write_data_to_file(A)
        elif a == '3':
            edit_discipline(A)
            write_data_to_file(A)
        elif a == '4':
            binary_insertion_sort(A, lambda x: x.name)
            display_database(A)
        elif a == '5':
            sort(A)
        elif a == '0':
            print('\nПрограмма корректно завершила свою работу!')
            break
        else:
            print('\nВы ввели не число от 0 до 5. Попробуйте ещё раз, у вас обязательно получится!\n'
                  '\n————————————————————————————————————————————————————————————————\n')
    except Exception as ex:
        print(f'\nК сожалению, во время работы программы произошла ошибка...\n{ex}\n'
              f'\n————————————————————————————————————————————————————————————————\n')